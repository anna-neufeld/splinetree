% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SplineTree.R
\name{splineTree}
\alias{splineTree}
\title{Build a spline tree}
\usage{
splineTree(splitFormula, tformula, idvar, data, knots = NULL, df = NULL,
  degree = 3, intercept = FALSE, nGrid = 7, minNodeSize = 10,
  cp = 0.01)
}
\arguments{
\item{splitFormula}{Formula specifying the longitudinal response variable and the time-constant variables that will be used for splitting in the tree}

\item{tformula}{Formula specifying the longitudinal response variable and the variable that acts as the time variable}

\item{idvar}{The name of the variable that serves as the ID variable. Must be in quotes}

\item{data}{dataframe that contains all variables specified in the formulas (long format)}

\item{knots}{defaults to NULL, specified locations for INTERNAL knots.}

\item{df}{If this is specified but knots is not, we will add the approriate number of internal knots. Defaults to NULL, which corresponds to no internal knots.}

\item{degree}{Specifies degree of splines used in the tree}

\item{intercept}{Should the spline tree be built with or without the spline intercept coefficient? Default to FALSE.}

\item{nGrid}{Number of grid points along time variable in which trajectories are compared.}

\item{minNodeSize}{Minimum number of IDS that can be in a terminal node}

\item{cp}{Complexity parameter passed to rpart building process.}
}
\value{
An rpart object with extra information stored in model$parms.
}
\description{
Builds an rpart object for the responses projected onto a specified spline basis. Either knots or df (but not both) should be specified. If neither is specified, the default is to have no internal knots in the spline.
Knots is the location of the internal knots, whereas df specifies indirectly how many internal knots should be used.
}
\examples{
form1 <-BMI~HISP+WHITE+BLACK+HGC_MOTHER+SEX
model1 <- splineTree(form1, BMI~AGE, 'ID', nlsySample, degree=1, intercept=FALSE, cp=0.005)
model2 <- splineTree(form1, BMI~AGE, 'ID', nlsySample, degree=3, intercept=TRUE, cp=0.005)
stPlots(model1)
stPlots(model2)
}
